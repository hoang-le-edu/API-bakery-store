{
    "openapi": "3.0.0",
    "info": {
        "title": "Bakery Store API Documentation",
        "description": "API documentation for Bakery Store E-commerce Platform. This API provides endpoints for managing products, orders, carts, customers, and more.",
        "contact": {
            "name": "Le Minh Hoang",
            "email": "leminhhoang.working@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Register a new user with email, password, and Firebase UID",
                "operationId": "4f26f0bb2c981c428a8abf8f0432a837",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "phone_number",
                                    "firebase_uid"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "phone_number": {
                                        "type": "string",
                                        "example": "0123456789"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "c_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "firebase_uid": {
                                        "type": "string",
                                        "example": "firebase_uid_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/gen-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Generate OTP for phone number",
                "description": "Generate and send OTP to the provided phone number",
                "operationId": "db8226bf42bbb4ccad77a13ea7b8b3d6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "mobile_no"
                                ],
                                "properties": {
                                    "mobile_no": {
                                        "description": "Phone number registered in the system",
                                        "type": "string",
                                        "example": "0123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "OTP generated successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/auth/auth-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with OTP",
                "description": "Authenticate user using OTP sent to phone number",
                "operationId": "2ed9330f15c744f85c20bde094574ef2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "otp"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "otp": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid OTP or OTP Expired"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login with email and password",
                "description": "Authenticate user using email and password",
                "operationId": "0bf3a9518eb969a2f78d921c4cd2bac8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User login successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User login successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "accessToken": {
                                                    "type": "string"
                                                },
                                                "refreshToken": {
                                                    "type": "string"
                                                },
                                                "user": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorised",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorised."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login-firebase": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Unified login with Firebase integration",
                "description": "Login for both admin and regular users with Firebase authentication. Admin users will use custom token, regular users will use email/password Firebase auth.",
                "operationId": "11c26d952aeb3c99cf4590ab3f407608",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User email address",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User password",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "string",
                                                            "example": "9b5f..."
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "user@example.com"
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "John Doe"
                                                        },
                                                        "is_admin": {
                                                            "type": "integer",
                                                            "example": 0
                                                        },
                                                        "firebase_uid": {
                                                            "type": "string",
                                                            "example": "PbviNczyrEgGIP4jPZiB4G5ICJz1"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "auth_method": {
                                                    "description": "Authentication method used: 'custom_token' for admin, 'password' for regular user",
                                                    "type": "string",
                                                    "example": "custom_token"
                                                },
                                                "firebase_auth": {
                                                    "properties": {
                                                        "idToken": {
                                                            "description": "Firebase ID token",
                                                            "type": "string",
                                                            "example": "eyJhbGc..."
                                                        },
                                                        "refreshToken": {
                                                            "description": "Firebase refresh token",
                                                            "type": "string",
                                                            "example": "AOEOulZ..."
                                                        },
                                                        "expiresIn": {
                                                            "description": "Token expiration in seconds",
                                                            "type": "string",
                                                            "example": "3600"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error - Firebase authentication failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Firebase authentication failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user information",
                "description": "Get authenticated user's profile information",
                "operationId": "0d1c8bb645e4fad05f7ad7f199ecb220",
                "responses": {
                    "200": {
                        "description": "User retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "permissions": {
                                                    "type": "object"
                                                },
                                                "visible_module": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "customer_info": {
                                                    "type": "object"
                                                },
                                                "report": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User Not Found"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Logout the authenticated user and invalidate all tokens",
                "operationId": "015940285cd227c678d4bf979b90261f",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User logged out successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "user_type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh access token",
                "description": "Generate new access and refresh tokens using a valid refresh token",
                "operationId": "3bce4ab800d5a0a0340798bc40200ac9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "refreshToken"
                                ],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "example": "refresh_token_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tokens refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string"
                                        },
                                        "refreshToken": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid or expired refresh token"
                    }
                }
            }
        },
        "/api/auth/check-firebase-user": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Check if Firebase user exists",
                "description": "Check if a user with the given Firebase UID exists in the system",
                "operationId": "64c9fa6096b0da990e0279232a32e421",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firebase_uid"
                                ],
                                "properties": {
                                    "firebase_uid": {
                                        "type": "string",
                                        "example": "firebase_uid_here"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "existed": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/categories/options/all": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories (Public)",
                "description": "Get all categories visible to customers",
                "operationId": "c57998d76904759bb2470907d884b76d",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "enum": [
                                                            "Food",
                                                            "Drink",
                                                            "Topping"
                                                        ]
                                                    },
                                                    "priority": {
                                                        "type": "integer"
                                                    },
                                                    "image_path": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admin/categories/add": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create new category (Admin)",
                "description": "Create a new category",
                "operationId": "64d158835a7d1e0cc54764ec40c0c2b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "type"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Beverages"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "All kinds of drinks"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "Food",
                                            "Drink",
                                            "Topping"
                                        ],
                                        "example": "Drink"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/admin/categories/all": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories (Admin)",
                "description": "Get all categories including hidden ones for admin panel",
                "operationId": "d4684065f54b028bdc26c8666a89b3ba",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/ghn/provinces": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get provinces list",
                "description": "Get all provinces from GHN API for shipping address",
                "operationId": "51ef33ca38e3526e000ae6104dfdb621",
                "responses": {
                    "200": {
                        "description": "Provinces retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "ProvinceID": {
                                                        "type": "integer"
                                                    },
                                                    "ProvinceName": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "GHN API Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/ghn/districts": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get districts list",
                "description": "Get districts by province ID from GHN API",
                "operationId": "48cb5fac5dc32eb0304a44884cf13e40",
                "parameters": [
                    {
                        "name": "province_id",
                        "in": "query",
                        "description": "Province ID from GHN",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 202
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Districts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "GHN API Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/ghn/wards": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Get wards list",
                "description": "Get wards by district ID from GHN API",
                "operationId": "383a023658008ff5450f854534d2a548",
                "parameters": [
                    {
                        "name": "district_id",
                        "in": "query",
                        "description": "District ID from GHN",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1542
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wards retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "GHN API Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/ghn/shipping-fee": {
            "get": {
                "tags": [
                    "Shipping"
                ],
                "summary": "Calculate shipping fee",
                "description": "Calculate shipping fee from GHN based on destination",
                "operationId": "4af95bd52ce48a861952d0fd261a2af6",
                "parameters": [
                    {
                        "name": "team_id",
                        "in": "query",
                        "description": "Team/Branch ID (from location)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_district_id",
                        "in": "query",
                        "description": "Destination District ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "to_ward_code",
                        "in": "query",
                        "description": "Destination Ward Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "insurance_value",
                        "in": "query",
                        "description": "Order value for insurance",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Shipping fee calculated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "data": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50000
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "GHN API Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/cart/addProductToCart": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add product to cart",
                "description": "Add a product with optional toppings to one or multiple shopping carts",
                "operationId": "b06f052c3c78766011b53f9698241f66",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "product"
                                ],
                                "properties": {
                                    "product": {
                                        "properties": {
                                            "product_id": {
                                                "type": "integer"
                                            },
                                            "size": {
                                                "type": "string",
                                                "example": "M"
                                            },
                                            "quantity": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "toppings_id": {
                                                "type": "array",
                                                "items": {
                                                    "type": "integer"
                                                }
                                            },
                                            "note": {
                                                "type": "string"
                                            },
                                            "total_price": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "order_ids": {
                                        "description": "Array of order IDs to add product to",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Product or Customer not found"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/cart/fetchCart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Fetch user's shopping cart",
                "description": "Get all draft orders (carts) with their items for the authenticated customer",
                "operationId": "6fc01d61bb579b8f2aa8ec9b80577e3f",
                "responses": {
                    "200": {
                        "description": "Cart fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Cart fetched successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "order_id": {
                                                        "type": "integer"
                                                    },
                                                    "order_number": {
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "count_product": {
                                                        "type": "integer"
                                                    },
                                                    "total_price": {
                                                        "type": "number"
                                                    },
                                                    "order_detail": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Customer not found"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/payos/create-payment-link": {
            "post": {
                "tags": [
                    "Payment"
                ],
                "summary": "Create PayOS payment link",
                "description": "Create a payment link for order using PayOS",
                "operationId": "2770592edea187f490645fe9a9beda92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "order_id"
                                ],
                                "properties": {
                                    "order_id": {
                                        "type": "string",
                                        "example": "9d4a5c8e-1234-5678-abcd-123456789abc"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment link created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "integer",
                                            "example": 0
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Success"
                                        },
                                        "checkoutUrl": {
                                            "type": "string",
                                            "example": "https://pay.payos.vn/web/..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Order not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/admin/products/all": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get all products (Admin)",
                "description": "Get all products with categories for admin panel",
                "operationId": "a1979eb80a2fd4bf226492636b9464c2",
                "parameters": [
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "firebaseAuth": []
                    }
                ]
            }
        },
        "/api/customer/products/all": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products for customers",
                "description": "Get all active products with categories for customer view",
                "operationId": "7f77a11c2b1560da38fbb29d90175d90",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "searchText",
                        "in": "query",
                        "description": "Search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "products_count": {
                                            "type": "integer"
                                        },
                                        "pagination": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/customer/product/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product detail for customer",
                "description": "Get detailed information of a specific product including toppings and sizes",
                "operationId": "34500503e95666d46964cb000b66c35c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product detail retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "price": {
                                                    "type": "number"
                                                },
                                                "topping_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "size_list": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "image_url": {
                                                    "type": "string"
                                                },
                                                "productDetailImages": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "firebaseAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "Enter Firebase JWT token"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "API Endpoints for user authentication and authorization"
        },
        {
            "name": "Products",
            "description": "API Endpoints for product management"
        },
        {
            "name": "Cart",
            "description": "API Endpoints for shopping cart management"
        },
        {
            "name": "Categories",
            "description": "API Endpoints for category management"
        },
        {
            "name": "Shipping",
            "description": "API Endpoints for shipping and delivery"
        },
        {
            "name": "Payment",
            "description": "API Endpoints for payment processing"
        }
    ]
}